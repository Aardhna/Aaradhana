// Fibonacci Series using Space Optimized Method
#include <bits/stdc++.h>
using namespace std;

void fib_Iter(int n)
{
	int a = 0, b = 1, c, i;
	cout<<a<<" "<<b<<" ";
	if (n <= 0)
		cout<<n;
	for (i = 2; i < n; i++) {
		c = a + b;
		cout<<c<<" ";
		a = b;
		b = c;
	}
}

int fib_recurse(int x) {
   if((x==1)||(x==0)) {
      return(x);
   }else {
      return(fib_recurse(x-1)+fib_recurse(x-2));
   }
}

int main()
{
    cout<<"************** Menu ****************"<<endl;
    cout<<"1. Iterative approach\n 2. Recursive approach\n 3. Quit"<<endl;
	int n, ch;
	cout<<"Enter a choice = ";
	cin>>ch;
	switch(ch){

	    case 1:
            cout<<"Enter the number up yo which to calculate fibonacci series = ";
            cin>>n;
	        cout << "\nFibonnaci Series : ";
	        fib_Iter(n);
	        break;
	    
	    case 2:
            cout<<"Enter the number up yo which to calculate fibonacci series = ";
            cin>>n;
	        int i=0;
           cout << "\nFibonnaci Series : ";
           while(i < n) {
              cout << " " << fib_recurse(i);
              i++;
        	}
        	break;
    	
    	case 3:
            exit(0);
    	    break;
    	
    	default:
    	    cout<<"\nInvalid choice";
            break;
	}
	return 0;
}
